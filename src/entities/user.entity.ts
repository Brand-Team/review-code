import { Entity, Column, PrimaryGeneratedColumn, OneToMany } from "typeorm";
import { Task } from "./task.entity";
import { ApiProperty } from "@nestjs/swagger";

@Entity()
export class User {

    @ApiProperty({
        description: 'Unique identifier for the user. Automatically generated by the database.',
        example: '12',
    })
    @PrimaryGeneratedColumn()
    id: number;

    @ApiProperty({
        description: 'The username of the user. It must be a non-empty string and will be used for user identification within the application.',
        example: 'tmk2109',
    })
    @Column()
    username: string;

    @ApiProperty({
        description: 'The email address of the user. This must be a valid email format and will be used for communication and account verification.',
        example: 'tmk2109@gmail.com'
    })
    @Column({unique: true})
    email: string;

    @ApiProperty({
        description: 'The password for the user’s account. It must be at least 6 characters long and cannot be empty.',
        example: '123456'
    })
    @Column()
    password: string;

    @ApiProperty({
        description: 'Indicates if the user’s account is active. Defaults to true.',
        default: true,
    })
    @Column({default: true})
    isActive: boolean;

    @ApiProperty({
        description: 'Indicates whether the user has administrative privileges. This field is optional; if not provided, the user will be assigned the default role (non-admin).',
        example: 'false'
    })
    @Column({default: false})
    isAdmin: boolean;

    @ApiProperty({
        description: 'The tasks assigned to the user.',
        type: () => [Task],
    })
    @OneToMany(() => Task, (task) => task.user)
    assignedTasks: Task[]

    @ApiProperty({
        description: 'The tasks owned by the user.',
        type: () => [Task],
    })
    @OneToMany(() => Task, (task) => task.owner)
    ownedTask: Task[]
}